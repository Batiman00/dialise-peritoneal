generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String          @id @default(uuid())
  name             String?
  email            String          @unique
  emailVerified    DateTime?
  image            String?
  password         String
  crm              Int
  state            State
  passwordResets   PasswordReset[]
  sessions         Session[]
  verificationToken String?
  prescriptions    Prescription[] 
}

model Prescription {
  id                  String   @id @default(uuid())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  TotalVolumeUpper    Float
  CycleCountUpper     Int
  TherapyDurationUpper Int
  SolutionCalciumUpper Float
  SolutionPotassiumUpper Float
  SolutionGlucoseUpper Float
  SolutionInsulinUpper Float
  TotalVolumeLower    Float
  CycleCountLower     Int
  TherapyDurationLower Int
  SolutionCalciumLower Float
  SolutionPotassiumLower Float
  SolutionGlucoseLower Float
  SolutionInsulinLower Float
  ModelVersion        String
  PacientId           String    // Hashed CPF of the patient
  userId              String
  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordReset {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum State {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}
